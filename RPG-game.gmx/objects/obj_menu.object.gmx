<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// drawing the "main" menu

num_of_grid=10;// how many tiles in each (x-y)-axis

padding = 32;

_x = view_xview[0];
_y = view_yview[0];
ex = view_wview[0];
ey = view_hview[0];

draw_set_colour(c_gray);
draw_rectangle(_x+padding,_y+padding, _x +ex -padding,_y + ey-padding,0);
draw_set_colour(c_black);
draw_rectangle(_x+padding,_y+padding,_x + ex-padding,_y + ey-padding,1);

draw_line(_x + ex / 2, _y + padding ,_x + ex / 2 ,_y + ey - padding);
/*
draw_set_colour(make_colour_rgb(150,150,150));
draw_rectangle(_x +(ex/2)+ padding,_y+(padding*2), _x +(ex)-(padding*2), _y + ey-(padding*2),0);
*/
draw_rectangle_grided(_x +(ex/2)+ padding,_y+(padding*2), _x +(ex)-(padding*2), _y + ey-(padding*2),num_of_grid,make_colour_rgb(150,150,150),c_black,c_white);




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// drawing the items

//       xstart      ,     ystart    ,        xend        ,       yend
//_x +(ex/2)+ padding,_y+(padding*2), _x +(ex)-(padding*2), _y + ey-(padding*2)

var _xstart = _x +(ex/2)+ padding;
var _ystart = _y+(padding*2);
var _xend = _x +(ex)-(padding*2);
var _yend = _y + ey-(padding*2);

var x_grid_size = abs(_xstart - _xend)/num_of_grid;
var y_grid_size = abs(_ystart - _yend)/num_of_grid;

for(var i=0;i&lt; num_of_grid;i++){
    for(var j=0;j&lt;num_of_grid;j++){
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
