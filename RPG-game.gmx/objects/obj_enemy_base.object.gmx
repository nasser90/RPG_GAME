<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Monster</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// creating variables

hp = 10; // health points
spd = 1; // speed which the obj move each frame ( most likely )
state = "idle"; 
damage = 2; 
facing = 3; // the direction the obj move at 
range = 64; 
xst = 0; // the x-axis where the monster starts
yst = 0; // the y-axis where the monster starts
m_hit =0; //flag for hitting the enemy
iframes=0; // invornabilty frames, the frames which the obj cant be hit
timer = 0;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed =0.1;
if ( instance_exists( obj_player)){
    if(distance_to_object(obj_player) &lt;= range){
        if(obj_game.state != st_fight){
            if(abs(obj_player.phy_position_x-phy_position_x)&gt;=abs(obj_player.phy_position_y-phy_position_y)){
                phy_position_x = movetoward( phy_position_x,obj_player.phy_position_x,spd);
            }else{
                phy_position_y = movetoward( phy_position_y,obj_player.phy_position_y,spd);
            }
        }else{
            phy_position_x = movetoward( phy_position_x,obj_player.phy_position_x,spd);
         //   phy_position_y = movetoward( phy_position_y,obj_player.phy_position_y,spd);
        }
   
        
          // ----- sprite control -- *diagonal need modification
         if(phy_position_x - phy_position_xprevious &gt;0 &amp;&amp; abs(phy_position_x - phy_position_xprevious)&gt;abs(phy_position_y - phy_position_yprevious)){       
            sprite_index = spr_Monster_right;
         }else if(phy_position_x - phy_position_xprevious &lt;0 &amp;&amp; abs(phy_position_x - phy_position_xprevious)&gt;abs(phy_position_y - phy_position_yprevious)){  
                 sprite_index = spr_Monster_left;
         } else if(phy_position_y - phy_position_yprevious &gt;0 &amp;&amp; abs(phy_position_y - phy_position_yprevious)&gt;abs(phy_position_x - phy_position_xprevious) &amp;&amp;obj_game.state!=st_fight){  
                 sprite_index = spr_Monster_down;
         } else if(phy_position_y - phy_position_yprevious &lt;0 &amp;&amp; abs(phy_position_y - phy_position_yprevious)&gt;abs(phy_position_x - phy_position_xprevious)&amp;&amp;obj_game.state!=st_fight){  
                 sprite_index = spr_Monster_up;

    }   
}
    else {
         switch(facing ){ 
            case 0 :{
                cx = 0;
                cy = -spd;
                sprite_index = spr_Monster_up;
                break;
            }
            case 1 :{
                cx = spd;
                cy = 0;
                sprite_index = spr_Monster_right;
                break;
            }
            case 2 :{
                cx = 0;
                cy = spd;
                sprite_index = spr_Monster_down;
                break;
            }
            case 3 :{
                cx = -spd;
                cy = 0;
                sprite_index = spr_Monster_left;
                break;
            }
         }
         if(irandom(100) &lt; 2){
            facing = choose(0,1,2,3);
         }
         if (!(phy_position_x + spd &gt; xst+192 || phy_position_x-spd &lt; xst -192 || phy_position_y+spd &gt; yst+192 || phy_position_y-spd &lt; yst-192)){
            phy_position_x = movetoward( phy_position_x, phy_position_x + cx,spd);
            phy_position_y = movetoward( phy_position_y, phy_position_y + cy,spd);
         }
         else{
            phy_position_x = movetoward( phy_position_x, xst,spd);
            phy_position_y = movetoward( phy_position_y, yst,spd);
            
            if(phy_position_x - phy_position_xprevious &gt;0 &amp;&amp; abs(phy_position_x - phy_position_xprevious)&gt;abs(phy_position_y - phy_position_yprevious)){       
            sprite_index = spr_Monster_right;
         }else if(phy_position_x - phy_position_xprevious &lt;0 &amp;&amp; abs(phy_position_x - phy_position_xprevious)&gt;abs(phy_position_y - phy_position_yprevious)){  
                 sprite_index = spr_Monster_left;
         } else if(phy_position_y - phy_position_yprevious &gt;0 &amp;&amp; abs(phy_position_y - phy_position_yprevious)&gt;abs(phy_position_x - phy_position_xprevious)){  
                 sprite_index = spr_Monster_down;
         } else if(phy_position_y - phy_position_yprevious &lt;0 &amp;&amp; abs(phy_position_y - phy_position_yprevious)&gt;abs(phy_position_x - phy_position_xprevious)){  
                 sprite_index = spr_Monster_up;
         } 
         }
    }
}

if(room == 3){ // rm_villagefight
    range = 2000
    phy_rotation = 0;
    phy_fixed_rotation = true;
}

if(hp &lt;= 0){
    instance_destroy();
}

show_debug_message(object_get_name(object_index));

iframes--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_player.enemy_index = object_index;

with(other){
    if(iframes &lt;= 0){
        if(obj_game.state != st_fight){
            with(instance_create(phy_position_x,phy_position_y,transition_system)){
                obj_player.sprite_index = spr_player_right;
                room_dist = rm_villagefight;
                
                x_dist = 80;
                y_dist = 513;
                
                with(obj_game){
                    state_switch(st_fight);
                }
            } 
        }else {
            obj_player.hp -= 1;
            if(obj_enemy_base.sprite_index == spr_Monster_left){
                obj_player.iframes=15;
                obj_player.p_hit=1;
                obj_player.phy_position_x -=40;
            }
            else
            {
                obj_player.iframes=15;
                obj_player.p_hit=1;
                obj_player.phy_position_x +=40;    
            }
        
        }       
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if(global.debug){
    draw_set_colour(c_red){
        draw_rectangle(bbox_left+16,bbox_top+8,bbox_left+48,bbox_top+60,1); // x 32 *  y 52
    }
}
if(obj_game.state == st_fight) {
    if(m_hit==1)
    {
        draw_self();
        draw_sprite(spr_hit,0,x,y);
        draw_set_colour(c_red);
        draw_text(x-10,y-60,"-1");
        
    }
    if(iframes &lt;=0){
        m_hit=0;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,8</point>
    <point>48,8</point>
    <point>48,60</point>
    <point>16,60</point>
  </PhysicsShapePoints>
</object>
